name: Test Build

on:
#  push:
#    branches: [ "release" ]
#  pull_request:
#    branches: [ "release" ]
  workflow_dispatch: # 手动触发

jobs:
  build:
    runs-on: ubuntu-latest

    env:
      ANDROID_API_LEVEL: 30
      ANDROID_BUILD_TOOLS_VERSION: 30.0.3
      ANDROID_SDK_ROOT: /usr/local/lib/android/sdk

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: gradle

      - name: Download Android SDK
        run: |
          mkdir -p $ANDROID_SDK_ROOT/cmdline-tools
          curl -fo sdk-tools.zip https://dl.google.com/android/repository/commandlinetools-linux-7302050_latest.zip
          unzip -q sdk-tools.zip -d $ANDROID_SDK_ROOT/cmdline-tools
          rm sdk-tools.zip
          mv $ANDROID_SDK_ROOT/cmdline-tools/cmdline-tools $ANDROID_SDK_ROOT/cmdline-tools/latest

      - name: Install Android SDK packages
        run: |
          yes | $ANDROID_SDK_ROOT/cmdline-tools/latest/bin/sdkmanager --sdk_root=$ANDROID_SDK_ROOT --licenses
          $ANDROID_SDK_ROOT/cmdline-tools/latest/bin/sdkmanager --sdk_root=$ANDROID_SDK_ROOT "platform-tools" "platforms;android-${ANDROID_API_LEVEL}" "build-tools;${ANDROID_BUILD_TOOLS_VERSION}"

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Build with Gradle
        run: ./gradlew assembleRelease

      - name: Prepare App
        run: |
          mkdir -p ${{ github.workspace }}/apk/
          for file in `find ~ -name "*.apk" -print`; do
            mv "$file" ${{ github.workspace }}/apk/
          done

      - name: Upload APK
        uses: actions/upload-artifact@v3
        with:
          name: app-release
          path: ${{ github.workspace }}/apk/*
